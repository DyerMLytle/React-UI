{"ast":null,"code":"var _jsxFileName = \"/Users/dlytle/recnt-Proj/React-UI/lmiuif/src/components/FocusOffcan.js\";\nimport React from 'react';\nimport { Offcanvas, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FocusOffcan(props) {\n  //const [setShowFocus] = React.useState(false);\n  // const handleCloseFocus = () => setShowFocus(false);\n  // const handleShowFocus = () => setShowFocus(true);\n  const {\n    showFocus,\n    toggleShowFocus\n  } = props;\n  return (\n    /*#__PURE__*/\n    // <div>\n    _jsxDEV(Offcanvas, {\n      placement: 'end',\n      show: showFocus,\n      onHide: toggleShowFocus,\n      style: {\n        background: \"rgb(254, 254, 200)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Focus the Telescope\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: [\"Use the Buttons and inputs below to run a focus loop.\", /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: toggleShowFocus,\n          children: \"Focus now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n    /* <Button variant=\"primary\" size=\"sm\" onClick={handleShow} >\n      Focus\n    </Button> */\n    // </div >\n\n  );\n}\n\n_c = FocusOffcan;\nexport default FocusOffcan;\n\nvar _c;\n\n$RefreshReg$(_c, \"FocusOffcan\");","map":{"version":3,"sources":["/Users/dlytle/recnt-Proj/React-UI/lmiuif/src/components/FocusOffcan.js"],"names":["React","Offcanvas","Button","FocusOffcan","props","showFocus","toggleShowFocus","background"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,MAFF,QAGO,iBAHP;AAIA,OAAO,sCAAP;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B;AAEA;AACA;AAEA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAiCF,KAAvC;AAEA;AAAA;AAEE;AACE,YAAC,SAAD;AAAW,MAAA,SAAS,EAAE,KAAtB;AAA6B,MAAA,IAAI,EAAEC,SAAnC;AAA8C,MAAA,MAAM,EAAEC,eAAtD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OADT;AAAA,8BAEE,QAAC,SAAD,CAAW,MAAX;AAAkB,QAAA,WAAW,MAA7B;AAAA,+BACE,QAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,SAAD,CAAW,IAAX;AAAA,yFAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAED,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACN;AACA;AACI;;AApBF;AAsBD;;KA9BQH,W;AAgCT,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport {\n  Offcanvas,\n  Button\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction FocusOffcan(props) {\n  //const [setShowFocus] = React.useState(false);\n\n  // const handleCloseFocus = () => setShowFocus(false);\n  // const handleShowFocus = () => setShowFocus(true);\n\n  const { showFocus, toggleShowFocus } = props\n\n  return (\n\n    // <div>\n      <Offcanvas placement={'end'} show={showFocus} onHide={toggleShowFocus}\n        style={{ background: \"rgb(254, 254, 200)\" }}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>Focus the Telescope</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          Use the Buttons and inputs below to run a focus loop.\n          <p />\n          <Button variant=\"primary\" onClick={toggleShowFocus}>\n            Focus now\n          </Button>\n        </Offcanvas.Body>\n      </Offcanvas>\n\n      /* <Button variant=\"primary\" size=\"sm\" onClick={handleShow} >\n        Focus\n      </Button> */\n    // </div >\n  )\n}\n\nexport default FocusOffcan;"]},"metadata":{},"sourceType":"module"}