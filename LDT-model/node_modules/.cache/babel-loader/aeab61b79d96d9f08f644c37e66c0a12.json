{"ast":null,"code":"var _jsxFileName = \"/Users/dlytle/recnt-Proj/React-UI/LDT-model/src/index.js\",\n    _s = $RefreshSig$();\n\nimport ReactDOM from 'react-dom';\nimport React, { useRef, useState } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Box(props) {\n  _s();\n\n  // This reference will give us direct access to the THREE.Mesh object\n  const ref = useRef(); // Set up state for the hovered and active state\n\n  const [hovered, setHover] = useState(false);\n  const [active, setActive] = useState(false); // Subscribe this component to the render-loop, rotate the mesh every frame\n\n  useFrame((state, delta) => ref.current.rotation.x += 0.01); // Return the view, these are regular Threejs elements expressed in JSX\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", { ...props,\n    ref: ref,\n    scale: active ? 4.0 : 1.0,\n    onClick: event => setActive(!active),\n    onPointerOver: event => setHover(true),\n    onPointerOut: event => setHover(false),\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [1, 1, 1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: hovered ? 'hotpink' : 'orange'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Box, \"RokOIghE9678tbgzaEhW0/tn2rs=\", false, function () {\n  return [useFrame];\n});\n\n_c = Box;\nReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    position: \"relative\",\n    width: 300,\n    height: 300\n  },\n  children: /*#__PURE__*/_jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(\"color\", {\n      attach: \"background\",\n      args: [\"blue\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"camera\", {\n      position: [10, 0, 20]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [10, 10, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      position: [-1.2, -4, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      position: [1.2, -2, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Box\");","map":{"version":3,"sources":["/Users/dlytle/recnt-Proj/React-UI/LDT-model/src/index.js"],"names":["ReactDOM","React","useRef","useState","Canvas","useFrame","Box","props","ref","hovered","setHover","active","setActive","state","delta","current","rotation","x","event","render","position","width","height","document","getElementById"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,oBAAjC;;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB;AACA,QAAMC,GAAG,GAAGN,MAAM,EAAlB,CAFkB,CAGlB;;AACA,QAAM,CAACO,OAAD,EAAUC,QAAV,IAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC,CALkB,CAMlB;;AACAE,EAAAA,QAAQ,CAAC,CAACQ,KAAD,EAAQC,KAAR,KAAmBN,GAAG,CAACO,OAAJ,CAAYC,QAAZ,CAAqBC,CAArB,IAA0B,IAA9C,CAAR,CAPkB,CAQlB;;AACA,sBACE,qBACMV,KADN;AAEE,IAAA,GAAG,EAAEC,GAFP;AAGE,IAAA,KAAK,EAAEG,MAAM,GAAG,GAAH,GAAS,GAHxB;AAIE,IAAA,OAAO,EAAGO,KAAD,IAAWN,SAAS,CAAC,CAACD,MAAF,CAJ/B;AAKE,IAAA,aAAa,EAAGO,KAAD,IAAWR,QAAQ,CAAC,IAAD,CALpC;AAME,IAAA,YAAY,EAAGQ,KAAD,IAAWR,QAAQ,CAAC,KAAD,CANnC;AAAA,4BAOE;AAAa,MAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAnB;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAsB,MAAA,KAAK,EAAED,OAAO,GAAG,SAAH,GAAe;AAAnD;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GArBQH,G;UAOPD,Q;;;KAPOC,G;AAuBTN,QAAQ,CAACmB,MAAT,eACE;AAAK,EAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,KAAK,EAAE,GAA/B;AAAoCC,IAAAA,MAAM,EAAE;AAA5C,GAAZ;AAAA,yBACA,QAAC,MAAD;AAAA,4BACE;AAAO,MAAA,MAAM,EAAC,YAAd;AAA2B,MAAA,IAAI,EAAE,CAAC,MAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAY,MAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT;AAAtB;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,GAAD;AAAK,MAAA,QAAQ,EAAE,CAAC,CAAC,GAAF,EAAO,CAAC,CAAR,EAAW,CAAX;AAAf;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,GAAD;AAAK,MAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,CAAC,CAAP,EAAU,CAAV;AAAf;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,QADF,EAUEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAVF","sourcesContent":["import ReactDOM from 'react-dom'\nimport React, { useRef, useState } from 'react'\nimport { Canvas, useFrame } from '@react-three/fiber'\n\n\nfunction Box(props) {\n  // This reference will give us direct access to the THREE.Mesh object\n  const ref = useRef()\n  // Set up state for the hovered and active state\n  const [hovered, setHover] = useState(false)\n  const [active, setActive] = useState(false)\n  // Subscribe this component to the render-loop, rotate the mesh every frame\n  useFrame((state, delta) => (ref.current.rotation.x += 0.01))\n  // Return the view, these are regular Threejs elements expressed in JSX\n  return (\n    <mesh\n      {...props}\n      ref={ref}\n      scale={active ? 4.0 : 1.0}\n      onClick={(event) => setActive(!active)}\n      onPointerOver={(event) => setHover(true)}\n      onPointerOut={(event) => setHover(false)}>\n      <boxGeometry args={[1, 1, 1]} />\n      <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\n    </mesh>\n  )\n}\n\nReactDOM.render(\n  <div style={{ position: \"relative\", width: 300, height: 300 }}>\n  <Canvas>\n    <color attach=\"background\" args={[\"blue\"]} />\n    <camera position={[10, 0, 20]} />\n    <ambientLight />\n    <pointLight position={[10, 10, 10]} />\n    <Box position={[-1.2, -4, 0]} />\n    <Box position={[1.2, -2, 0]} />\n  </Canvas></div>,\n  document.getElementById('root'),\n)"]},"metadata":{},"sourceType":"module"}