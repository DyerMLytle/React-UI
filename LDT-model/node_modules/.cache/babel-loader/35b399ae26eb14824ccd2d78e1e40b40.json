{"ast":null,"code":"var _jsxFileName = \"/Users/dlytle/recnt-Proj/React-UI/lmiuif/src/components/ExposeOffcan.js\";\nimport React from 'react';\nimport { Offcanvas, Button, InputGroup, FormControl } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExposeOffcan(props) {\n  // const [show, setShow] = React.useState(false);\n  // const handleClose = () => setShow(false);\n  // const handleShow = () => setShow(true);\n  const {\n    showExpose,\n    toggleShowExpose\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Offcanvas, {\n      placement: 'end',\n      show: showExpose,\n      onHide: toggleShowExpose,\n      style: {\n        background: \"rgb(254, 254, 180)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: \"Take Exposures\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: [\"Use the Buttons and inputs below to take exposures.\", /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          size: \"sm\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n            id: \"inputGroup-sizing-sm\",\n            children: \"Binning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            \"aria-label\": \"Small\",\n            \"aria-describedby\": \"inputGroup-sizing-sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          size: \"sm\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n            id: \"inputGroup-sizing-sm\",\n            children: \"Exposure Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            \"aria-label\": \"Small\",\n            \"aria-describedby\": \"inputGroup-sizing-sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          size: \"sm\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n            id: \"inputGroup-sizing-sm\",\n            children: \"# of Exposures\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            \"aria-label\": \"Small\",\n            \"aria-describedby\": \"inputGroup-sizing-sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: toggleShowExpose,\n          children: \"Expose now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ExposeOffcan;\nexport default ExposeOffcan;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExposeOffcan\");","map":{"version":3,"sources":["/Users/dlytle/recnt-Proj/React-UI/lmiuif/src/components/ExposeOffcan.js"],"names":["React","Offcanvas","Button","InputGroup","FormControl","ExposeOffcan","props","showExpose","toggleShowExpose","background"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,MAFF,EAGEC,UAHF,EAIEC,WAJF,QAKO,iBALP;AAMA,OAAO,sCAAP;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B;AAEA;AACA;AAEA,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAmCF,KAAzC;AAEA,sBAEE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAE,KAAtB;AAA6B,MAAA,IAAI,EAAEC,UAAnC;AAA+C,MAAA,MAAM,EAAEC,gBAAvD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OADT;AAAA,8BAEE,QAAC,SAAD,CAAW,MAAX;AAAkB,QAAA,WAAW,MAA7B;AAAA,+BACE,QAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,SAAD,CAAW,IAAX;AAAA,uFAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,IAAjB;AAAsB,UAAA,SAAS,EAAC,MAAhC;AAAA,kCACI,QAAC,UAAD,CAAY,IAAZ;AAAiB,YAAA,EAAE,EAAC,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,WAAD;AAAa,0BAAW,OAAxB;AAAgC,gCAAiB;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAOI,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,IAAjB;AAAsB,UAAA,SAAS,EAAC,MAAhC;AAAA,kCACE,QAAC,UAAD,CAAY,IAAZ;AAAiB,YAAA,EAAE,EAAC,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,WAAD;AAAa,0BAAW,OAAxB;AAAgC,gCAAiB;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAWI,QAAC,UAAD;AAAY,UAAA,IAAI,EAAC,IAAjB;AAAsB,UAAA,SAAS,EAAC,MAAhC;AAAA,kCACE,QAAC,UAAD,CAAY,IAAZ;AAAiB,YAAA,EAAE,EAAC,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,WAAD;AAAa,0BAAW,OAAxB;AAAgC,gCAAiB;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAeE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAED,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFF;AAkCD;;KA1CQH,Y;AA4CT,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport {\n  Offcanvas,\n  Button,\n  InputGroup,\n  FormControl\n} from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction ExposeOffcan(props) {\n  // const [show, setShow] = React.useState(false);\n\n  // const handleClose = () => setShow(false);\n  // const handleShow = () => setShow(true);\n\n  const { showExpose, toggleShowExpose } = props\n\n  return (\n\n    <div>\n      <Offcanvas placement={'end'} show={showExpose} onHide={toggleShowExpose}\n        style={{ background: \"rgb(254, 254, 180)\" }}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title>Take Exposures</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n          Use the Buttons and inputs below to take exposures.\n          <p />\n          <InputGroup size=\"sm\" className=\"mb-3\">\n              <InputGroup.Text id=\"inputGroup-sizing-sm\">Binning</InputGroup.Text>\n              <FormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\n            </InputGroup>\n            <InputGroup size=\"sm\" className=\"mb-3\">\n              <InputGroup.Text id=\"inputGroup-sizing-sm\">Exposure Time</InputGroup.Text>\n              <FormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\n            </InputGroup>\n            <InputGroup size=\"sm\" className=\"mb-3\">\n              <InputGroup.Text id=\"inputGroup-sizing-sm\"># of Exposures</InputGroup.Text>\n              <FormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\n            </InputGroup>\n          <Button variant=\"primary\" onClick={toggleShowExpose}>\n            Expose now\n          </Button>\n        </Offcanvas.Body>\n      </Offcanvas>\n\n      {/* <Button variant=\"primary\" size=\"sm\" onClick={handleShow} >\n        Exposure\n      </Button> */}\n    </div >\n  )\n}\n\nexport default ExposeOffcan;"]},"metadata":{},"sourceType":"module"}